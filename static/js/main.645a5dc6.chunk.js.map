{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/Resume.js","Components/Contact.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","networks","social","map","network","href","url","target","className","id","Component","Footer","year","Date","getFullYear","title","Resume","skillmessage","education","school","degree","graduated","work","company","years","Contact","Portfolio","projects","projectImage","image","alt","src","category","technologies","App","state","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","portfolio","resume","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.645a5dc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var occupation= this.props.data.occupation;\n      var description= this.props.data.description;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url} target='_blank'><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">Hi! My name is {name}.</h1>\n            <h3>I'm a <span>{occupation}</span> {description}.</h3>\n            <hr />\n            <ul className=\"social\">\n               {networks}\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#portfolio\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if (this.props.data) {\n      var networks = this.props.data.social.map(function (network) {\n        return <li key={network.name}><a href={network.url} target='_blank'><i className={network.className}></i></a></li>\n      })\n    }\n\n    var year = new Date().getFullYear()\n\n    return (\n      <footer>\n\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"social-links\">\n              {networks}\n            </ul>\n\n            <ul className=\"copyright\">\n              <li>&copy; Copyright {year} Palaash Kolhe</li>\n            </ul>\n\n          </div>\n          <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass Resume extends Component {\n  render() {\n\n    if(this.props.data){\n      var skillmessage = this.props.data.skillmessage;\n      var education = this.props.data.education.map(function(education){\n        return <div key={education.school}><h3>{education.school}</h3>\n        <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"date\">{education.graduated}</em></p>\n        <p>{education.description}</p></div>\n      })\n      var work = this.props.data.work.map(function(work){\n        return <div key={work.company}><h3>{work.company}</h3>\n            <p className=\"info\">{work.title}<span>&bull;</span> <em className=\"date\">{work.years}</em></p>\n            <p className=\"workDesc\">{work.description}</p>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"resume\">\n\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Education</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {education}\n               </div>\n            </div>\n         </div>\n      </div>\n\n\n      <div className=\"row work\">\n\n         <div className=\"three columns header-col\">\n            <h1><span>Experiences</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n          {work}\n        </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n\n    return (\n      <section id=\"contact\">\n\n         <div className=\"row section-head\">\n\n            <div className=\"two columns header-col\">\n\n               <h1><span>Get In Touch.</span></h1>\n\n            </div>\n\n            <div className=\"ten columns\">\n\n                  <p className=\"lead\">Feel free to contact me at <a href=\"mailto:pkolhe@uwaterloo.ca\">pkolhe@uwaterloo.ca</a> if you have any questions!</p>\n\n            </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n  render() {\n    if(this.props.data){\n      var projects = this.props.data.projects.map(function(projects) {\n        var projectImage = 'images/portfolio/'+projects.image;\n        return <div key={projects.title} className=\"columns portfolio-item\">\n           <div className=\"item-wrap\">\n            <a href={projects.url} target=\"_blank\" title={projects.title}>\n               <img alt={projects.title} src={projectImage} />\n               <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                  <h5>{projects.title}</h5>\n                  <p>{projects.category}</p>\n                  <br></br>\n                  <p><b>Technologies used: </b>{projects.technologies}</p>\n                  </div>\n                </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n            </a>\n          </div>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n      <div className=\"row\">\n\n         <div className=\"twelve columns collapsed\">\n\n            <h1>Check out some of my projects.</h1>\n\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters cf\">\n              {projects}\n            </div>\n          </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Resume from './Components/Resume';\nimport Contact from './Components/Contact';\nimport Portfolio from './Components/Portfolio';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <Portfolio data={this.state.resumeData.portfolio}/>\n        <Resume data={this.state.resumeData.resume}/>\n        <Contact data={this.state.resumeData.main}/>\n        <Footer data={this.state.resumeData.main}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}